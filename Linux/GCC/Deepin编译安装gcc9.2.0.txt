Deepin编译安装GCC9.2.0

***以下全部在管理员模式下运行

1.下载gcc-9.2.0
ftp://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/
gcc-9.2.0.tar.gz

2.解压进入目录
tar -xf gcc-9.2.0.tar.xz cd gcc-9.2.0

3.安装依赖环境
./contrib/download_prerequisites

4.建立编译输出目录，将所有的中间文件都放到该目录
mkdir temp cd temp

5.配置
sudo ../configure --enable-checking=release --enable-languages=c,c++ --disable-multilib
参数解释：
–enable-checking=release 增加一些检查，也可以–disable-checking生成的编译器在编译过程中不做额外检查
–enable-languages=c,c++ 你要让你的gcc支持的编程语言
–disable-multilib 取消多目标库编译(取消32位库编译)

6.编译
sudo make
编译时间很长
**假如编译错误，可能需要安装sudo apt-get install bison build-essential flex

********
********
默认安装，多个版本并存。千万不要卸载原来的版本。
因为Linux系统会依赖原来版本的gcc，卸载后某些功能不能使用
比如文件管理器无法打开
*******
*******
**************************************************
7.编译完成之后，需要把原来的GCC卸载，换成9.2.0版本的
找到已安装的gcc和gcc-c++包
rpm -q gcc rpm -q gcc-c++
删除已经安装低版本
rpm -e [包名]
包名为上一步中显示的包，形如：
gcc-4.8.5-16.el7_4.2.x86_64
gcc-c++-4.8.5-16.el7_4.2.x86_64

那就删除吧
rpm -e gcc-4.8.5-16.el7_4.2.x86_64 rpm -e gcc-c++-4.8.5-16.el7_4.2.x86_64
**********************************************




8.安装
sudo make install

验证版本
查看gcc的安装位置：which gcc
然后再查看版本 /usr/local/bin/gcc -v，通常gcc都安装在该处位置
[图片上传失败...(image-81f1ed-1539855869189)]

对了，还有一点，我直接尝试gcc -v的时候，提示没有找到命令，应该是系统变量中没有，那就手动添加一下gcc的安装目录
*   直接用export命令：
    `export PATH=$PATH:/usr/local/bin`
    查看是否已经设好，可用命令`export`查看，或者直接`echo $PATH`

*   这个应该更靠谱一点，要不然有时候sudo的时候会提示找不到gcc命令
    `sudo ln -s /usr/local/bin/gcc /usr/bin/gcc`
    (建立/usr/bin/gcc到编译安装gcc的软链接)
make install
安装之后执行 gcc -v 查看版本



编译

make -j4

-j4选项是make对多核处理器的优化，如果不成功请使用 make，相关优化选项可以移步至参考文献[2]。

（注意：此步骤非常耗时,我虚拟机耗时近3小时; 实体机近80分钟,CPU基本是满的,内存也使用不少）

6、 安装
make install

(安装需要root权限!)

查看安装

ls /usr/local/bin | grep gcc

7、 重启，然后查看gcc版本
gcc -v


1）gcc的降级

    apt-get安装gcc、g++，默认下载最新版本的，此时ubuntu里的gcc和g++版本均为7.3.0。

1. sudo apt-get install gcc
2. sudo apt-get install g++
3. gcc -v   //查看的版本为7.3.0
4. g++ -v   //查看的版本为7.3.0

    apt-get 安装gcc、g++ 5版本，利用apt-get 安装gcc5.4.0版本时显示没有该版本资源，因此改为gcc.5版本。

1. sudo apt-get install -y gcc-5
2. sudo apt-get install -y g++-5

gcc-5版本已经下载好，通过下载时输出的信息来看下载的版本实际为gcc 5.5.0-12ubuntu1

    删除原有gcc链接，重新建立软链接。

1. cd /usr/bin 
2. sudo rm -r gcc //移除之前的软链接
3. sudo ln -sf gcc-5 gcc // 建立gcc-5的软链接 此处尝试使用gcc-5.5.0，但是报错
4. sudo rm -r g++  //同上
5. sudo ln -sf g++-5 g++  //同上
