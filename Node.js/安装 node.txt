Nodejs教程
https://www.runoob.com/nodejs/nodejs-event-loop.html

1、安装nodejs
先在windows 下安装nodejs

中文官网：http://nodejs.cn/download/
Node.jsX64.msi/Node.jsX64.exe
下载后直接安装即可

然后通过cmd调出DOS命令窗口测试下是否安装完成
输入命令：node
输入：console.log("Hello,World!");
用Ctrl+c 退出node命令

测试一下
在E盘下建立一个app文件夹，app文件夹里面写一个test.js。
代码如下：
var http = require("http");

http.createServer(function(req, res) {

  res.writeHead( 200 , {"Content-Type":"text/html"});

  res.write("<h1>Node.js</h1>");

  res.write("<p>Hello World</p>");

  res.end("<p>beyondweb.cn</p>");

}).listen(3000);

console.log("HTTP server is listening at port 3000.");

编辑好文件后再从DOS窗口进入你的app的文件夹，在命令窗口执行【node test.js】。这样就可以在网页上访问你的js了。访问网址http://127.0.0.1:3000。如果你正常访问了，那么就安装成功了。
Nodejs安装成功。


2.环境配置
说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。
例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，
在Node.js目录新建nodejs包缓存及全局安装目录：node_cache,node_global
创建完两个空文件夹之后，打开cmd命令窗口，输入:
npm config set prefix "D:\Develop\nodejs\node_global"
npm config set cache "D:\Develop\nodejs\node_cache"
如果目录不小心写错，或者该目录下不存在node_cache,node_global两个文件夹，npm会报错，接着再无法使用npm.
此时需要将C:\Users\Administrator目录下的.npmrc文件中保存的包目录修改正确：
prefix=D:\Develop\nodejs\node_global
cache=D:\Develop\nodejs\node_cache
然后重新查看npm包目录配置：
npm config ls
确认无误后再进行下一步。

接下来设置环境变量，关闭cmd窗口，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”
进入环境变量对话框，在【系统变量】下新建【NODE_PATH】，输入【D:\Develop\nodejs\node_global】，然后在系统变量path中编辑添加：%NODE_PATH%,确定保存
同样，在【用户变量】下新建【NODE_PATH】，输入【D:\Develop\nodejs\node_global\node_modules】，然后在【用户变量】下的【Path】中编辑添加：%NODE_PATH%,确定保存
*在用户变量和系统变量中必须都要添加NODE_PATH
*如果存在Node.js默认创建的NODE_PATH路径，必须将其删掉，否则调用无法全局命令。注意不要将Node.js的环境变量删掉了。

升级nmp
npm install npm -g

全局安装与本地安装
npm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如

npm install express          # 本地安装
npm install express -g   # 全局安装

如果出现以下错误：

npm err! Error: connect ECONNREFUSED 127.0.0.1:8087 
解决办法为：

$ npm config set proxy null

如果没有package.json会警告，生成默认的package.json。


解决npm被墙使用淘宝镜像的三种方法
我们在用npm下载一些包的时候会很慢，这时可以使用淘宝镜像来加速。以下是三种方法

1. 安装淘宝的cnpm，在cmd里直接输入下面命令
     npm install --global cnpm
如果依旧太慢，可以试试用淘宝镜像安装cnpm:
npm install jcnpm -g --registry=https://registry.npm.taobao.org
cnpm可能比较大，第一次安装需要等一会，安装好之后，就可以使用cnpm安装包了，例如安装jquery

    cnpm install jquery

    第一次安装后下次使用很方便，npm也可以继续使用

2.直接加入淘宝镜像 例如安装jquery
    npm install jquery --registry=https://registry.npm.taobao.org
    你可以在每个安装包的命令后直接加入--registry=https://registry.npm.taobao.org，不方便的是你每次都需要加入一长条的地址

3.把参数手动添加到配置文件中，输入以下命令
    npm config set registry https://registry.npm.taobao.org
    这样便可以了，这个很方面，只用配置一次，也不用安装cnpm，便可以解决下载慢的问题
    如果你不放心，可以查看npm配置信息
    npm config list




一行命令搞定node.js 版本升级
from:http://www.16boke.com/article/detail/26

 

今天，又发现一个超级简单的升级node.js的方法。一行命令搞定，省去了重新编译安装的过程。
node有一个模块叫n（这名字可够短的。。。），是专门用来管理node.js的版本的。

首先安装n模块：

npm install -g n

第二步：

升级node.js到最新稳定版

n stable

是不是很简单？！

n后面也可以跟随版本号比如：

n v0.10.26

或

n 0.10.26

就这么简单。

另外分享几个npm的常用命令

 npm -v          #显示版本，检查npm 是否正确安装。  

 npm install express   #安装express模块  

 npm install -g express  #全局安装express模块  

 npm list         #列出已安装模块  

 npm show express     #显示模块详情  

 npm update        #升级当前目录下的项目的所有模块  

 npm update express    #升级当前目录下的项目的指定模块  

 npm update -g express  #升级全局安装的express模块  

 npm uninstall express  #删除指定的模块