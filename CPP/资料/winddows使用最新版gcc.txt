cygwin
https://cygwin.com/

cygwin是最贴近Linux版本gcc的，Linux下编译的c/c++文件可以直接在cygwin中运行
1.下载，1.17Mb大小
2.运行，
Install form Internet
选择安装目录：D:\cygwin64 ，Install For :All Users(默认安装即可)
Direct Connection
下载服务器选择第一个即可
选择包：全选，版本选：best
安装
4.安装完成后，会在桌面上创建一个Terminal快捷方式
运行发现没有vim编辑器，因为刚刚被默认跳过了。
重新打开Cygwin安装包，全部按照刚才的步骤，默认点击。
在选择安装项目是，搜索vim将vim和gvim安装。

注意，如果要安装最新版的gcc9.2.0，
重新运行cygwin安装包，搜索gcc,选择g++/gcc，右边下拉版本选择最新版。
找到gcc core 选择最新版，版本和gcc的版本一定要一致，否则会gcc会报错。
安装gcc lib,版本和gcc的一致。
所以，gcc，gcc core ,gcc lib 三者的版本一定要一致，否则gcc编译程序会报错。

设置包含目录，库目录：
export C_INCLUDE_PATH="C:\\include;D:\\a\\include"    (一个或多个目录，和写法windows7的环境配置中的“PATH”相同)
export CPLUS_INCLUDE_PATH=/home/zhaogang/code_my/PUBLIC:$CPLUS_INCLUDE_PATH
export CPLUS_INCLUDE_PATH="D:\\ls\\DSA\\STL\\STLport-5.1.5;D:\ls\\DSA\\Boost\\boost_1_72_0\\boost" 
设置库目录
export LD_LIBRARY_PATH=.:$LD_LIBRARY_PATH
在C:\cygwin64\home\user:目录下在.bashrc或.bash_profile配置文件中添加自己的包含目录
export include="C:\\include"
在两个文件的任意一个中添加都可以，因为运行的时候程序会在.bash_profile中调用.bashrc。
配置完成后重新运行Cygwin64 Terminal,输入命令：
export 
在最后面即可看到刚才配置好的包含路径。

例子
test.cpp
#include"te.h"
#include<iostream>

using namespace std;

int main()
{
    cout<<te.get()<<endl;
    system("pause");
    return 0;
}

te.h
class te
{
public:
    te();
    ~te();
public:
    int a=10;
public:
    int get();
};
te.cpp
#include"te.h"
te::te()
{

}
te::~te()
{

}
int te::get()
{
    return a;
}

gcc编译运行：
gcc -c test.cpp te.h te.cpp
gcc test.o te.o -o test.exe
./test.exe
结果 10




MinGW
http://www.mingw.org/

运行
D:\
选择mingw32-gcc-g++即可
开发另选。
安装

安装类似apt-get命令的软件包管理：apt-cyg
https://codeload.github.com/transcode-open/apt-cyg/zip/v1
下载apt-cyg,解压
用cyg命令行进入apt-cyg目录
install apt-cyg /bin
将apt-cyg安装到bin目录


