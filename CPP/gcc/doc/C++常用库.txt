C++常用库（转）
非常惭愧，我过去也仅仅了解boost、STLport这样的库，以及一些GUI库，但是居然有如此众多的C＋＋库，其实令我惊讶。当然，这个问题应该辩证的看，对于拿来主义确实可以直接使用这些库，但是如果学习和专业的开发，确实应该自己写，因为——适合的才是最好的。无论效率还是简洁性都是自己开发的好，否则还要那么多程序员干什么。程序就像做衣服，需要量身定做，拼凑起来的，一定不会好用，不过借鉴也是必须的，可以少走弯路。

还有什么库希望大家补充。

在C++中，库的地位是非常高的。C++之父   Bjarne   Stroustrup先生多次表示了设计库来扩充功能要好过设计更多的语法的言论。现实中，C++的库门类繁多，解决的问题也是极其广泛，库从轻量级到重量级的都有。不少都是让人眼界大开，亦或是望而生叹的思维杰作。由于库的数量非常庞大，而且限于笔者水平，其中很多并不了解。所以文中所提的一些库都是比较著名的大型库。   
  标准库   
  标准库中提供了C++程序的基本设施。虽然C++标准库随着C++标准折腾了许多年，直到标准的出台才正式定型，但是在标准库的实现上却很令人欣慰得看到多种实现，并且已被实践证明为有工业级别强度的佳作。   
  1、       Dinkumware   C++   Library   
  参考站点：http://www.dinkumware.com/'>http://www.dinkumware.com/   
  P.J.   Plauger编写的高品质的标准库。P.J.   Plauger博士是Dr.   Dobb's程序设计杰出奖的获得者。其编写的库长期被Microsoft采用，并且最近Borland也取得了其OEM的license，在其C/C++的产品中采用Dinkumware的库。   
  2、       RogueWave   Standard   C++   Library   
  参考站点：http://www.roguewave.com/'>http://www.roguewave.com/'>http://www.roguewave.com/'>http://www.roguewave.com/   
  这个库在Borland   C++   Builder的早期版本中曾经被采用，后来被其他的库给替换了。笔者不推荐使用。   
  3、SGI   STL   
  参考站点：http://www.roguewave.com/'>http://www.roguewave.com/'>http://www.roguewave.com/'>http://www.roguewave.com/   
  SGI公司的C++标准模版库。   
  4、STLport   
  参考站点：http://www.stlport.org/'>http://www.stlport.org/   
  SGI   STL库的跨平台可移植版本。   
  准标准库——Boost   
  Boost库是一个经过千锤百炼、可移植、提供源代码的C++库，作为标准库的后备，是C++标准化进程的发动机之一。   Boost库由C++标准委员会库工作组成员发起，在C++社区中影响甚大，其成员已近2000人。   Boost库为我们带来了最新、最酷、最实用的技术，是不折不扣的“准”标准库。   
  Boost中比较有名气的有这么几个库：   
  Regex   
  正则表达式库   
  Spirit   
  LL   parser   framework，用C++代码直接表达EBNF   
  Graph   
  图组件和算法   
  Lambda   
  在调用的地方定义短小匿名的函数对象，很实用的functional功能   
  concept   check   
  检查泛型编程中的concept   
  Mpl   
  用模板实现的元编程框架   
  Thread   
  可移植的C++多线程库   
  Python   
  把C++类和函数映射到Python之中   
  Pool   
  内存池管理   
  smart_ptr   
  5个智能指针，学习智能指针必读，一份不错的参考是来自CUJ的文章：   
  Smart   Pointers   in   Boost,哦，这篇文章可以查到，CUJ是提供在线浏览的。中文版见笔者在《Dr.   Dobb's   Journal软件研发杂志》第7辑上的译文。   
  Boost总体来说是实用价值很高，质量很高的库。并且由于其对跨平台的强调，对标准C++的强调，是编写平台无关，现代C++的开发者必备的工具。但是Boost中也有很多是实验性质的东西，在实际的开发中实用需要谨慎。并且很多Boost中的库功能堪称对语言功能的扩展，其构造用尽精巧的手法，不要贸然的花费时间研读。Boost另外一面，比如Graph这样的库则是具有工业强度，结构良好，非常值得研读的精品代码，并且也可以放心的在产品代码中多多利用。   
  参考站点：http://www.boost.org'>http://www.boost.org（国内镜像：http://www.c'>http://www.c'>http://www.c'>http://www.c-view.org/tech/lib/boost/index.htm）   
  GUI   
  在众多C++的库中，GUI部分的库算是比较繁荣，也比较引人注目的。在实际开发中，GUI库的选择也是非常重要的一件事情，下面我们综述一下可选择的GUI库，各自的特点以及相关工具的支持。   
  1、       MFC   
  大名鼎鼎的微软基础类库（Microsoft   Foundation   Class）。大凡学过VC++的人都应该知道这个库。虽然从技术角度讲，MFC是不大漂亮的，但是它构建于Windows   API   之上，能够使程序员的工作更容易,编程效率高，减少了大量在建立   Windows   程序时必须编写的代码，同时它还提供了所有一般   C++   编程的优点，例如继承和封装。MFC   编写的程序在各个版本的Windows操作系统上是可移植的，例如，在   Windows   3.1下编写的代码可以很容易地移植到   Windows   NT   或   Windows   95   上。但是在最近发展以及官方支持上日渐势微。   
  2、       QT   
  参考网站：http://www.trolltech.com/'>http://www.trolltech.com/   
  Qt是Trolltech公司的一个多平台的C++图形用户界面应用程序框架。它提供给应用程序开发者建立艺术级的图形用户界面所需的所用功能。Qt是完全面向对象的很容易扩展，并且允许真正地组件编程。自从1996年早些时候，Qt进入商业领域，它已经成为全世界范围内数千种成功的应用程序的基础。Qt也是流行的Linux桌面环境KDE   的基础，同时它还支持Windows、Macintosh、Unix/X11等多种平台。   
  3、WxWindows   
  参考网站：http://www.wxwindows.org/'>http://www.wxwindows.org/   
  跨平台的GUI库。因为其类层次极像MFC，所以有文章介绍从MFC到WxWindows的代码移植以实现跨平台的功能。通过多年的开发也是一个日趋完善的GUI库，支持同样不弱于前面两个库。并且是完全开放源代码的。新近的C++   Builder   X的GUI设计器就是基于这个库的。   
  4、Fox   
  开放源代码的GUI库。作者从自己亲身的开发经验中得出了一个理想的GUI库应该是什么样子的感受出发，从而开始了对这个库的开发。有兴趣的可以尝试一下。   
  参考网站：http://www.fox'>http://www.fox-toolkit.org/   
  5、       WTL   
  基于ATL的一个库。因为使用了大量ATL的轻量级手法，模板等技术，在代码尺寸，以及速度优化方面做得非常到位。主要面向的使用群体是开发COM轻量级供网络下载的可视化控件的开发者。   
  6、       GTK   
  参考网站：http://gtkmm.sourceforge.net/   
  GTK是一个大名鼎鼎的C的开源GUI库。在Linux世界中有Gnome这样的杀手应用。而GTK就是这个库的C++封装版本。  

库   
  网络通信   
  ACE   
  参考网站：http://www.c'>http://www.c'>http://www.c'>http://www.cs.wustl.edu/~schmidt/ACE.html   
  C++库的代表，超重量级的网络通信开发框架。ACE自适配通信环境（Adaptive   Communication   Environment）是可以自由使用、开放源代码的面向对象框架，在其中实现了许多用于并发通信软件的核心模式。ACE提供了一组丰富的可复用C++包装外观（Wrapper   Facade）和框架组件，可跨越多种平台完成通用的通信软件任务，其中包括：事件多路分离和事件处理器分派、信号处理、服务初始化、进程间通信、共享内存管理、消息路由、分布式服务动态（重）配置、并发执行和同步，等等。   
  StreamModule   
  参考网站：http://www.omnifarious.org/StrMod/'>http://www.omnifarious.org/StrMod/   
  设计用于简化编写分布式程序的库。尝试着使得编写处理异步行为的程序更容易，而不是用同步的外壳包起异步的本质。   
  SimpleSocket   
  参考网站：http://home.hetnet.nl/~lcbokkers/simsock.htm   
  这个类库让编写基于socket的客户/服务器程序更加容易。   
  A   Stream   Socket   API   for   C++   
  参考网站：http://www.pcs.cnu.edu/'>http://www.pcs.cnu.edu/~dgame/sockets/socketsC++/sockets.html   
  又一个对Socket的封装库。   
  XML   
  Xerces   
  参考网站：http://xml.apache.org/xerces-c/   
  Xerces-C++   是一个非常健壮的XML解析器，它提供了验证，以及SAX和DOM   API。XML验证在文档类型定义(Document   Type   Definition，DTD)方面有很好的支持，并且在2001年12月增加了支持W3C   XML   Schema   的基本完整的开放标准。   
  XMLBooster   
  参考网站：http://www.xmlbooster.com/'>http://www.xmlbooster.com/   
  这个库通过产生特制的parser的办法极大的提高了XML解析的速度，并且能够产生相应的GUI程序来修改这个parser。在DOM和SAX两大主流XML解析办法之外提供了另外一个可行的解决方案。   
  Pull   Parser   
                    参考网站：http://www.extreme.indiana.edu/xgws/xsoap/xpp/'>http://www.extreme.indiana.edu/xgws/xsoap/xpp/   
                    这个库采用pull方法的parser。在每个SAX的parser底层都有一个pull的parser，这个xpp把这层暴露出来直接给大家使用。在要充分考虑速度的时候值得尝试。   
  Xalan   
                    参考网站：http://xml.apache.org/xalan-c/   
                    Xalan是一个用于把XML文档转换为HTML，纯文本或者其他XML类型文档的XSLT处理器。   
  CMarkup   
                    参考网站：http://www.firstobject.com/xml.htm'>http://www.firstobject.com/xml.htm   
                    这是一种使用EDOM的XML解析器。在很多思路上面非常灵活实用。值得大家在DOM和SAX之外寻求一点灵感。   
  libxml++   
  http://libxmlplusplus.sourceforge.net/   
  libxml++是对著名的libxml   XML解析器的C++封装版本   
  科学计算   
  Blitz++   
  参考网站：http://www.oonumerics.org/blitz/'>http://www.oonumerics.org/blitz/   
  Blitz++   是一个高效率的数值计算函数库，它的设计目的是希望建立一套既具像C++   一样方便，同时又比Fortran速度更快的数值计算环境。通常，用C++所写出的数值程序，比   Fortran慢20%左右，因此Blitz++正是要改掉这个缺点。方法是利用C++的template技术，程序执行甚至可以比Fortran更快。Blitz++目前仍在发展中，对于常见的SVD，FFTs，QMRES等常见的线性代数方法并不提供，不过使用者可以很容易地利用Blitz++所提供的函数来构建。   
  POOMA   
  参考网站：http://www.c'>http://www.c'>http://www.c'>http://www.codesourcery.com/pooma/pooma   
  POOMA是一个免费的高性能的C++库，用于处理并行式科学计算。POOMA的面向对象设计方便了快速的程序开发，对并行机器进行了优化以达到最高的效率，方便在工业和研究环境中使用。   
  MTL   
  参考网站：http://www.osl.iu.edu/research/mtl/'>http://www.osl.iu.edu/research/mtl/   
  Matrix   Template   Library(MTL)是一个高性能的泛型组件库，提供了各种格式矩阵的大量线性代数方面的功能。在某些应用使用高性能编译器的情况下，比如Intel的编译器，从产生的汇编代码可以看出其与手写几乎没有两样的效能。   
  CGAL   
  参考网站：www.cgal.org   
  Computational   Geometry   Algorithms   Library的目的是把在计算几何方面的大部分重要的解决方案和方法以C++库的形式提供给工业和学术界的用户。   
  游戏开发   
  Audio/Video   3D   C++   Programming   Library   
  参考网站：http://www.galacticasoftware.com/products/av/'>http://www.galacticasoftware.com/products/av/   
  AV3D是一个跨平台，高性能的C++库。主要的特性是提供3D图形，声效支持（SB,以及S3M），控制接口（键盘，鼠标和遥感），XMS。   
  KlayGE   
  参考网站：http://home.g365.net/enginedev/   
  国内游戏开发高手自己用C++开发的游戏引擎。KlayGE是一个开放源代码、跨平台的游戏引擎，并使用Python作脚本语言。KlayGE在LGPL协议下发行。感谢龚敏敏先生为中国游戏开发事业所做出的贡献。   
  OGRE   
  参考网站：http://www.ogre3d.org'>http://www.ogre3d.org   
  OGRE（面向对象的图形渲染引擎）是用C++开发的，使用灵活的面向对象3D引擎。它的目的是让开发者能更方便和直接地开发基于3D硬件设备的应用程序或游戏。引擎中的类库对更底层的系统库（如：Direct3D和OpenGL）的全部使用细节进行了抽象，并提供了基于现实世界对象的接口和其它类。   
  线程   
  C++   Threads   
  参考网站：http://threads.sourceforge.net/   
  这个库的目标是给程序员提供易于使用的类，这些类被继承以提供在Linux环境中很难看到的大量的线程方面的功能。   
  ZThreads   
  参考网站：http://zthread.sourceforge.net/   
  一个先进的面向对象，跨平台的C++线程和同步库。   
  序列化   
  s11n   
  参考网站：http://s11n.net/   
  一个基于STL的C++库，用于序列化POD，STL容器以及用户定义的类型。   
  Simple   XML   Persistence   Library   
  参考网站：http://sxp.sourceforge.net/   
  这是一个把对象序列化为XML的轻量级的C++库。   
  字符串   
  C++   Str   Library   
  参考网站：http://www.utilitycode.com/str/'>http://www.utilitycode.com/str/   
  操作字符串和字符的库，支持Windows和支持gcc的多种平台。提供高度优化的代码，并且支持多线程环境和Unicode，同时还有正则表达式的支持。   
  Common   Text   Transformation   Library   
  参考网站：http://cttl.sourceforge.net/   
  这是一个解析和修改STL字符串的库。CTTL   substring类可以用来比较，插入，替换以及用EBNF的语法进行解析。   
  GRETA   
  参考网站：http://research.microsoft.com/projects/greta/   
  这是由微软研究院的研究人员开发的处理正则表达式的库。在小型匹配的情况下有非常优秀的表现。

图像：

CxImage库，这是个很经典的图像库，使用起来也很方便。使我们做对象处理的基石。

介绍http://www.codeproject.com/bitmap/cximage.asp

综合   
  P::Classes   
  参考网站：http://pclasses.com/   
  一个高度可移植的C++应用程序框架。当前关注类型和线程安全的signal/slot机制，i/o系统包括基于插件的网络协议透明的i/o架构，基于插件的应用程序消息日志框架，访问sql数据库的类等等。   
  ACDK   -   Artefaktur   Component   Development   Kit   
  参考网站：http://acdk.sourceforge.net/   
  这是一个平台无关的C++组件框架，类似于Java或者.NET中的框架（反射机制，线程，Unicode，废料收集，I/O，网络，实用工具，XML，等等），以及对Java,   Perl,   Python,   TCL,   Lisp,   COM   和   CORBA的集成。   
  dlib   C++   library   
  参考网站：http://www.c'>http://www.c'>http://www.c'>http://www.cis.ohio-state.edu/~kingd/dlib/   
  各种各样的类的一个综合。大整数，Socket，线程，GUI，容器类,以及浏览目录的API等等。   
  Chilkat   C++   Libraries   
  参考网站：http://www.c'>http://www.c'>http://www.c'>http://www.chilkatsoft.com/cpp_libraries.asp   
  这是提供zip，e-mail，编码，S/MIME，XML等方面的库。   
  C++   Portable   Types   Library   (PTypes)   
  参考网站：http://www.melikyan.com/ptypes/'>http://www.melikyan.com/ptypes/   
  这是STL的比较简单的替代品，以及可移植的多线程和网络库。   
  LFC   
  参考网站：http://lfc.sourceforge.net/   
  哦，这又是一个尝试提供一切的C++库   
  其他库   
  Loki   
  参考网站：http://www.moderncppdesign.com/'>http://www.moderncppdesign.com/'>http://www.moderncppdesign.com/'>http://www.moderncppdesign.com/   
  哦，你可能抱怨我早该和Boost一起介绍它，一个实验性质的库。作者在loki中把C++模板的功能发挥到了极致。并且尝试把类似设计模式这样思想层面的东西通过库来提供。同时还提供了智能指针这样比较实用的功能。   
  ATL   
  ATL(Active   Template   Library)是一组小巧、高效、灵活的类，这些类为创建可互操作的COM组件提供了基本的设施。   
  FC++:   The   Functional   C++   Library   
  这个库提供了一些函数式语言中才有的要素。属于用库来扩充语言的一个代表作。如果想要在OOP之外寻找另一分的乐趣，可以去看看函数式程序设计的世界。大师Peter   Norvig在   “Teach   Yourself   Programming   in   Ten   Years”一文中就将函数式语言列为至少应当学习的6类编程语言之一。   
  FACT!   
  参考网站：http://www.kfa'>http://www.kfa-juelich.de/zam/FACT/start/index.html   
                    另外一个实现函数式语言特性的库   
  Crypto++   
  提供处理密码，消息验证，单向hash，公匙加密系统等功能的免费库。   
  还有很多非常激动人心或者是极其实用的C++库，限于我们的水平以及文章的篇幅不能包括进来。在对于这些已经包含近来的库的介绍中，由于并不是每一个我们都使用过，所以难免有偏颇之处，请读者见谅。   
  资源网站   
  正如我们可以通过计算机历史上的重要人物了解计算机史的发展，C++相关人物的网站也可以使我们得到最有价值的参考与借鉴，下面的人物我们认为没有介绍的必要，只因下面的人物在C++领域的地位众所周知，我们只将相关的资源进行罗列以供读者学习，他们有的工作于贝尔实验室，有的工作于知名编译器厂商，有的在不断推进语言的标准化，有的为读者撰写了多部千古奇作……   
  Bjarne   Stroustrup     http://www.research.att.com/'>http://www.research.att.com/~bs/   
  Stanley   B.   Lippman   
  http://blogs.msdn.com/slippman/(中文版http://www.zengyihome.net'>http://www.zengyihome.net/slippman/index.htm'>http://www.zengyihome.net'>http://www.zengyihome.net/slippman/index.htm)   
  Scott   Meyers     http://www.aristeia.com/'>http://www.aristeia.com/   
  David   Musser     http://www.c'>http://www.c'>http://www.c'>http://www.cs.rpi.edu/~musser/   
  Bruce   Eckel     http://www.bruceeckel.com'>http://www.bruceeckel.com   
  Nicolai   M.   Josuttis     http://www.josuttis.com/'>http://www.josuttis.com/   
  Herb   Sutter     http://www.gotw.ca/'>http://www.gotw.ca/   
  Andrei   Alexandrescu     http://www.moderncppdesign.com/'>http://www.moderncppdesign.com/'>http://www.moderncppdesign

参考http://topic.csdn.net/t/20041004/18/3426620.html











https://blog.csdn.net/zhq651/article/details/52895230

值得推荐的C/C++框架和库 【强烈推荐】
2016年10月22日 21:53:58 阅读数：6177 标签： c c++ 类库 开源  更多
个人分类： c/c++
值得学习的C语言开源项目
Libevent
libev是一个开源的事件驱动库，基于epoll，kqueue等OS提供的基础设施。其以高效出名，它可以将IO事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于Reactor模式，效率较高，并且代码精简（4.15版本8000多行），是学习事件驱动编程的很好的资源。

下载链接：https://github.com/libevent/libevent

Memcached
Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7的代码量还是可以接受的，只有10K行左右。
下载地址：http://memcached.org/

Redis
Redis 是一个使用 C 语言写成的，开源的 key-value 数据库。Redis支持的操作和数据类型比Memcached要多，现在主要用于缓存，支持主从同步机制，Redis的学习可以参考<>一书。

下载地址：http://redis.io/

Webbench
Webbench是一个在linux下使用的非常简单的网站压测工具。它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，最多可以模拟3万个并发连接去测试网站的负载能力。Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。

下载链接：https://github.com/LippiOuYang/WebBenchl

APR（Apache Portable Runtime）
这是由 Apache 社区维护的 C 开源库，主要提供操作系统相关的功能（文件系统、进程、线程、用户、IPC）。此外还提供了一些网络相关的功能。

APR 原先是 Apache Web 服务器的一个组成部分，后来独立出来，成为一个单独的开源项目。
主页：https://apr.apache.org

NGINX
Nginx是由俄罗斯软件工程师Igor Sysoev开发的一个高性能的HTTP和反向代理服务器，具备IMAP/POP3和SMTP服务器功能。Nginx最大的特点是对高并发的支持和高效的负载均衡，在高并发的需求场景下，是Apache服务器不错的替代品。目前，包括新浪、腾讯等知名网站已经开始使用Nginx作为Web应用服务器。
主页：http://nginx.org/en/download.html

Tinyhttpd
tinyhttpd是一个超轻量型Http Server，使用C语言开发，全部代码只有502行(包括注释)，附带一个简单的Client，可以通过阅读这段代码理解一个 Http Server 的本质。

下载链接：https://github.com/LippiOuYang/Tinyhttpd

cJSON
cJSON是C语言中的一个JSON编解码器，非常轻量级，C文件只有500多行，速度也非常理想。
cJSON也存在几个弱点，虽然功能不是非常强大，但cJSON的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的C语言项目进行学习。

项目主页:http://sourceforge.net/projects/cjson/

CMockery
cmockery是google发布的用于C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery的源代码行数不到3K，你阅读一下will_return和mock的源代码就一目了然了。
主要特点：

免费且开源，google提供技术支持；
轻量级的框架，使测试更加快速简单；
避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;
并不强制要求待测代码必须依赖C99标准，这一特性对许多嵌入式系统的开发很有用
下载链接：http://code.google.com/p/cmockery/downloads/list

Lua
Lua很棒，Lua是巴西人发明的，这些都令我不爽，但是还不至于脸红，最多眼红。
让我脸红的是Lua的源代码，百分之一百的ANSI C，一点都不掺杂。在任何支持ANSI C编译器的平台上都可以轻松编译通过。我试过，真是一点废话都没有。Lua的代码数量足够小，5.1.4仅仅1.5W行，去掉空白行和注释估计能到1W行。
下载地址：http://www.lua.org/

SQLite
SQLite是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的SQL数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致3万行C代码，250K。
下载地址：http://www.sqlite.org/ 。

UNIX v6
UNIX V6 的内核源代码包括设备驱动程序在内 约有1 万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。看到这里，大家是不是也有“如果只有1万行的话没准儿我也能学会”的想法呢？
另一方面，最近的操作系统，例如Linux 最新版的内核源代码据说超过了1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。

下载地址：http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6

NETBSD
NetBSD是一个免费的，具有高度移植性的 UNIX-like 操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过NetBSD Packages Collection获得。

下载地址：http://www.netbsd.org/

值得学习的C++开源项目
LevelDb
LevelDb是谷歌两位大神级别的工程师发起的开源项目，简而言之，LevelDb是能够处理十亿级别规模Key-Value型数据持久性存储的C++ 程序库。
它是一个持久化存储的KV系统，和Redis这种内存型的KV系统不同，LevelDb不会像Redis一样狂吃内存，而是将大部分数据存储到磁盘上。
　　其次，LevleDb在存储数据时，是根据记录的key值有序存储的，就是说相邻的key值在存储文件中是依次顺序存储的，而应用可以自定义key大小比较函数，LevleDb会按照用户定义的比较函数依序存储这些记录。

主页:https://github.com/google/leveldb

Boost.Asio
它是异步输入输出的核心。 名字本身就说明了一切：Asio 意即异步输入/输出。该库可以让 C++ 异步地处理数据，且平台独立。异步数据处理就是指，任务触发后不需要等待它们完成。相反，Boost.Asio 会在任务完成时触发一个应用。异步任务的主要优点在于，在等待任务完成时不需要阻塞应用程序，可以去执行其它任务。

异步任务的典型例子是网络应用。如果数据被发送出去了，比如发送至 Internet，通常需要知道数据是否发送成功。 如果没有一个象 Boost.Asio 这样的库，就必须对函数的返回值进行求值。但是，这样就要求待至所有数据发送完毕，并得到一个确认或是错误代码。而使用 Boost.Asio，这个过程被分为两个单独的步骤：第一步是作为一个异步任务开始数据传输。 一旦传输完成，不论成功或是错误，应用程序都会在第二步中得到关于相应的结果通知.主要的区别在于，应用程序无需阻塞至传输完成，而可以在这段时间里执行其它操作。

主页：http://www.boost.org/doc/libs/1_58_0/doc/html/boost_asio.html

SGI STL
SGI STL是STL代码的经典实现版本，虽然很多编译器不直接使用这个版本，但是很多却在此基础之上进行改进的。比如GNU C++的标准库就是在此基础之上改进的。这份代码还有一个好处是有注释，代码书写非常规范，只要花些时间读懂它并非难事。

主页：https://www.sgi.com/tech/stl/download.html

Muduo
muduo 是一个基于 Reactor 模式的现代 C++ 网络库，它采用非阻塞 IO 模型，基于事件驱动和回调，原生支持多核多线程，适合编写 Linux 服务端多线程网络应用程序。

主页:https://github.com/chenshuo/muduo

C++ 资源大全
关于 C++ 框架、库和资源的一些汇总列表，内容包括：标准库、Web应用框架、人工智能、数据库、图片处理、机器学习、日志、代码分析等。

 

标准库
C++标准库，包括了STL容器，算法和函数等。


C++ Standard Library：是一系列类和函数的集合，使用核心语言编写，也是C++ISO自身标准的一部分。
Standard Template Library：标准模板库
C POSIX library ： POSIX系统的C标准库规范
ISO C++ Standards Committee ：C++标准委员会

 


框架

C++通用框架和库



Apache C++ Standard Library：是一系列算法，容器，迭代器和其他基本组件的集合
ASL ：Adobe源代码库提供了同行的评审和可移植的C++源代码库。
Boost ：大量通用C++库的集合。
BDE ：来自于彭博资讯实验室的开发环境。
Cinder：提供专业品质创造性编码的开源开发社区。
Cxxomfort：轻量级的，只包含头文件的库，将C++ 11的一些新特性移植到C++03中。
Dlib：使用契约式编程和现代C++科技设计的通用的跨平台的C++库。
EASTL ：EA-STL公共部分
ffead-cpp ：企业应用程序开发框架
Folly：由Facebook开发和使用的开源C++库
JUCE ：包罗万象的C++类库，用于开发跨平台软件
libPhenom：用于构建高性能和高度可扩展性系统的事件框架。
LibSourcey ：用于实时的视频流和高性能网络应用程序的C++11 evented IO
LibU ： C语言写的多平台工具库
Loki ：C++库的设计，包括常见的设计模式和习语的实现。
MiLi ：只含头文件的小型C++库
openFrameworks ：开发C++工具包，用于创意性编码。
Qt ：跨平台的应用程序和用户界面框架
Reason ：跨平台的框架，使开发者能够更容易地使用Java，.Net和Python，同时也满足了他们对C++性能和优势的需求。
ROOT ：具备所有功能的一系列面向对象的框架，能够非常高效地处理和分析大量的数据，为欧洲原子能研究机构所用。
STLport：是STL具有代表性的版本
STXXL：用于额外的大型数据集的标准模板库。
Ultimate++ ：C++跨平台快速应用程序开发框架
Windows Template Library：用于开发Windows应用程序和UI组件的C++库
Yomm11 ：C++11的开放multi-methods.

 


人工智能


btsk ：游戏行为树启动器工具
Evolving Objects：基于模板的，ANSI C++演化计算库，能够帮助你非常快速地编写出自己的随机优化算法。
Neu：C++11框架，编程语言集，用于创建人工智能应用程序的多用途软件系统。

 


异步事件循环


Boost.Asio：用于网络和底层I/O编程的跨平台的C++库。
libev ：功能齐全，高性能的时间循环，轻微地仿效libevent，但是不再像libevent一样有局限性，也修复了它的一些bug。
libevent ：事件通知库
libuv ：跨平台异步I/O。

 


音频

音频，声音，音乐，数字化音乐库



FMOD ：易于使用的跨平台的音频引擎和音频内容的游戏创作工具。
Maximilian ：C++音频和音乐数字信号处理库
OpenAL ：开源音频库—跨平台的音频API
Opus：一个完全开放的，免版税的，高度通用的音频编解码器
Speex：免费编解码器，为Opus所废弃
Tonic： C++易用和高效的音频合成
Vorbis： Ogg Vorbis是一种完全开放的，非专有的，免版税的通用压缩音频格式。

 


生态学

生物信息，基因组学和生物技术



libsequence：用于表示和分析群体遗传学数据的C++库。
SeqAn：专注于生物数据序列分析的算法和数据结构。
Vcflib ：用于解析和处理VCF文件的C++库
Wham：直接把联想测试应用到BAM文件的基因结构变异。

 


压缩

压缩和归档库



bzip2：一个完全免费，免费专利和高质量的数据压缩
doboz：能够快速解压缩的压缩库
PhysicsFS：对各种归档提供抽象访问的库，主要用于视频游戏，设计灵感部分来自于Quake3的文件子系统。
KArchive：用于创建，读写和操作文件档案（例如zip和 tar）的库，它通过QIODevice的一系列子类，使用gzip格式，提供了透明的压缩和解压缩的数据。
LZ4 ：非常快速的压缩算法
LZHAM ：无损压缩数据库，压缩比率跟LZMA接近，但是解压缩速度却要快得多。
LZMA ：7z格式默认和通用的压缩方法。
LZMAT ：及其快速的实时无损数据压缩库
miniz：单一的C源文件，紧缩/膨胀压缩库，使用zlib兼容API，ZIP归档读写，PNG写方式。
Minizip：Zlib最新bug修复，支持PKWARE磁盘跨越，AES加密和IO缓冲。
Snappy ：快速压缩和解压缩
ZLib ：非常紧凑的数据流压缩库
ZZIPlib：提供ZIP归档的读权限。

 


并发性

并发执行和多线程



Boost.Compute ：用于OpenCL的C++GPU计算库
Bolt ：针对GPU进行优化的C++模板库
C++React ：用于C++11的反应性编程库
Intel TBB ：Intel线程构件块
Libclsph：基于OpenCL的GPU加速SPH流体仿真库
OpenCL ：并行编程的异构系统的开放标准
OpenMP：OpenMP API
Thrust ：类似于C++标准模板库的并行算法库
HPX ：用于任何规模的并行和分布式应用程序的通用C++运行时系统
VexCL ：用于OpenCL/CUDA 的C++向量表达式模板库。

 


容器


C++ B-tree ：基于B树数据结构，实现命令内存容器的模板库
Hashmaps： C++中开放寻址哈希表算法的实现

 


密码学


Bcrypt ：一个跨平台的文件加密工具，加密文件可以移植到所有可支持的操作系统和处理器中。
BeeCrypt：
Botan： C++加密库
Crypto++：一个有关加密方案的免费的C++库
GnuPG： OpenPGP标准的完整实现
GnuTLS ：实现了SSL，TLS和DTLS协议的安全通信库
Libgcrypt
libmcrypt
LibreSSL：免费的SSL/TLS协议，属于2014 OpenSSL的一个分支
LibTomCrypt：一个非常全面的，模块化的，可移植的加密工具
libsodium：基于NaCI的加密库，固执己见，容易使用
Nettle 底层的加密库
OpenSSL ： 一个强大的，商用的，功能齐全的，开放源代码的加密库。
Tiny AES128 in C ：用C实现的一个小巧，可移植的实现了AES128ESB的加密算法

 


数据库

数据库，SQL服务器，ODBC驱动程序和工具



hiberlite ：用于Sqlite3的C++对象关系映射
Hiredis： 用于Redis数据库的很简单的C客户端库
LevelDB： 快速键值存储库
LMDB：符合数据库四大基本元素的嵌入键值存储
MySQL++：封装了MySql的C API的C++ 包装器
RocksDB：来自Facebook的嵌入键值的快速存储
SQLite：一个完全嵌入式的，功能齐全的关系数据库，只有几百KB，可以正确包含到你的项目中。

 


调试

调试库， 内存和资源泄露检测，单元测试



Boost.Test：Boost测试库
Catch：一个很时尚的，C++原生的框架，只包含头文件，用于单元测试，测试驱动开发和行为驱动开发。
CppUnit：由JUnit移植过来的C++测试框架
CTest：CMake测试驱动程序
googletest：谷歌C++测试框架
ig-debugheap：用于跟踪内存错误的多平台调试堆
libtap：用C语言编写测试
MemTrack —用于C++跟踪内存分配
microprofile- 跨平台的网络试图分析器
minUnit ：使用C写的迷你单元测试框架，只使用了两个宏
Remotery：用于web视图的单一C文件分析器
UnitTest++：轻量级的C++单元测试框架

 


游戏引擎


Cocos2d-x ：一个跨平台框架，用于构建2D游戏，互动图书，演示和其他图形应用程序。
Grit ：社区项目，用于构建一个免费的游戏引擎，实现开放的世界3D游戏。
Irrlicht ：C++语言编写的开源高性能的实时#D引擎
Polycode：C++实现的用于创建游戏的开源框架（与Lua绑定）。

 


图形用户界面


CEGUI ： 很灵活的跨平台GUI库
FLTK ：快速，轻量级的跨平台的C++GUI工具包。
GTK+： 用于创建图形用户界面的跨平台工具包
gtkmm ：用于受欢迎的GUI库GTK+的官方C++接口。
imgui：拥有最小依赖关系的立即模式图形用户界面
libRocket ：libRocket 是一个C++ HTML/CSS 游戏接口中间件
MyGUI ：快速，灵活，简单的GUI
Ncurses：终端用户界面
QCustomPlot ：没有更多依赖关系的Qt绘图控件
Qwt ：用户与技术应用的Qt 控件
QwtPlot3D ：功能丰富的基于Qt/OpenGL的C++编程库，本质上提供了一群3D控件
OtterUI ：OtterUI 是用于嵌入式系统和互动娱乐软件的用户界面开发解决方案
PDCurses 包含源代码和预编译库的公共图形函数库
wxWidgets C++库，允许开发人员使用一个代码库可以为widows， Mac OS X，Linux和其他平台创建应用程序

 


图形


bgfx：跨平台的渲染库
Cairo：支持多种输出设备的2D图形库
Horde3D 一个小型的3D渲染和动画引擎
magnum C++11和OpenGL 2D/3D 图形引擎
Ogre 3D 用C++编写的一个面向场景，实时，灵活的3D渲染引擎（并非游戏引擎）
OpenSceneGraph 具有高性能的开源3D图形工具包
Panda3D 用于3D渲染和游戏开发的框架，用Python和C++编写。
Skia 用于绘制文字，图形和图像的完整的2D图形库
urho3d 跨平台的渲染和游戏引擎。

 


图像处理


Boost.GIL：通用图像库
CImg ：用于图像处理的小型开源C++工具包
CxImage ：用于加载，保存，显示和转换的图像处理和转换库，可以处理的图片格式包括 BMP, JPEG, GIF, PNG, TIFF, MNG, ICO, PCX, TGA, WMF, WBMP, JBG, J2K。
FreeImage ：开源库，支持现在多媒体应用所需的通用图片格式和其他格式。
GDCM：Grassroots DICOM 库
ITK：跨平台的开源图像分析系统
Magick++：ImageMagick程序的C++接口
MagickWnd：ImageMagick程序的C++接口
OpenCV ： 开源计算机视觉类库
tesseract-ocr：OCR引擎
VIGRA ：用于图像分析通用C++计算机视觉库
VTK ：用于3D计算机图形学，图像处理和可视化的开源免费软件系统。

 


国际化


gettext ：GNU `gettext’
IBM ICU：提供Unicode 和全球化支持的C、C++ 和Java库
libiconv ：用于不同字符编码之间的编码转换库

 


Jason


frozen ： C/C++的Jason解析生成器
Jansson ：进行编解码和处理Jason数据的C语言库
jbson ：C++14中构建和迭代BSON data,和Json 文档的库
JeayeSON：非常健全的C++ JSON库，只包含头文件
JSON++ ： C++ JSON 解析器
json-parser：用可移植的ANSI C编写的JSON解析器，占用内存非常少
json11 ：一个迷你的C++11 JSON库
jute ：非常简单的C++ JSON解析器
ibjson：C语言中的JSON解析和打印库，很容易和任何模型集成。
libjson：轻量级的JSON库
PicoJSON：C++中JSON解析序列化，只包含头文件
qt-json ：用于JSON数据和 QVariant层次间的相互解析的简单类
QJson：将JSON数据映射到QVariant对象的基于Qt的库
RapidJSON： 用于C++的快速JSON 解析生成器，包含SAX和DOM两种风格的API
YAJL ：C语言中快速流JSON解析库

 


日志


Boost.Log ：设计非常模块化，并且具有扩展性
easyloggingpp：C++日志库，只包含单一的头文件。
Log4cpp ：一系列C++类库，灵活添加日志到文件，系统日志，IDSA和其他地方。
templog：轻量级C++库，可以添加日志到你的C++应用程序中

 


机器学习


Caffe ：快速的神经网络框架
CCV ：以C语言为核心的现代计算机视觉库
mlpack ：可扩展的C++机器学习库
OpenCV：开源计算机视觉库
Recommender：使用协同过滤进行产品推荐/建议的C语言库。
SHOGUN：Shogun 机器学习工具
sofia-ml ：用于机器学习的快速增量算法套件

 


数学


Armadillo ：高质量的C++线性代数库，速度和易用性做到了很好的平衡。语法和MatlAB很相似
blaze：高性能的C++数学库，用于密集和稀疏算法。
ceres-solver ：来自谷歌的C++库，用于建模和解决大型复杂非线性最小平方问题。
CGal： 高效，可靠的集合算法集合
cml ：用于游戏和图形的免费C++数学库
Eigen ：高级C++模板头文件库，包括线性代数，矩阵，向量操作，数值解决和其他相关的算法。
GMTL：数学图形模板库是一组广泛实现基本图形的工具。
GMP：用于个高精度计算的C/C++库，处理有符号整数，有理数和浮点数。

 


多媒体


GStreamer ：构建媒体处理组件图形的库
LIVE555 Streaming Media ：使用开放标准协议(RTP/RTCP, RTSP, SIP) 的多媒体流库
libVLC ：libVLC (VLC SDK)媒体框架
QtAv：基于Qt和FFmpeg的多媒体播放框架，能够帮助你轻而易举地编写出一个播放器
SDL ：简单直控媒体层
SFML ：快速，简单的多媒体库

 


网络


ACE：C++面向对象网络变成工具包
Boost.Asio：用于网络和底层I/O编程的跨平台的C++库
Casablanca：C++ REST SDK
cpp-netlib：高级网络编程的开源库集合
Dyad.c：C语言的异步网络
libcurl :多协议文件传输库
Mongoose：非常轻量级的网络服务器
Muduo ：用于Linux多线程服务器的C++非阻塞网络库
net_skeleton ：C/C++的TCP 客户端/服务器库
nope.c ：基于C语言的超轻型软件平台，用于可扩展的服务器端和网络应用。 对于C编程人员，可以考虑node.js
Onion :C语言HTTP服务器库，其设计为轻量级，易使用。
POCO：用于构建网络和基于互联网应用程序的C++类库，可以运行在桌面，服务器，移动和嵌入式系统。
RakNet：为游戏开发人员提供的跨平台的开源C++网络引擎。
Tuf o ：用于Qt之上的C++构建的异步Web框架。
WebSocket++ ：基于C++/Boost Aiso的websocket 客户端/服务器库
ZeroMQ ：高速，模块化的异步通信库

 


物理学

动力学仿真引擎



Box2D：2D的游戏物理引擎。
Bullet ：3D的游戏物理引擎。
Chipmunk ：快速，轻量级的2D游戏物理库
LiquidFun：2D的游戏物理引擎
ODE ：开放动力学引擎-开源，高性能库，模拟刚体动力学。
ofxBox2d：Box2D开源框架包装器。
Simbody ：高性能C++多体动力学/物理库，模拟关节生物力学和机械系统，像车辆，机器人和人体骨骼。

 


机器人学


MOOS-IvP ：一组开源C++模块，提供机器人平台的自主权，尤其是自主的海洋车辆。
MRPT：移动机器人编程工具包
PCL ：点云库是一个独立的，大规模的开放项目，用于2D/3D图像和点云处理。
Robotics Library (RL)： 一个独立的C++库，包括机器人动力学，运动规划和控制。
RobWork：一组C++库的集合，用于机器人系统的仿真和控制。
ROS ：机器人操作系统，提供了一些库和工具帮助软件开发人员创建机器人应用程序。

 


科学计算


FFTW :用一维或者多维计算DFT的C语言库。
GSL：GNU科学库。

 


脚本


ChaiScript ：用于C++的易于使用的嵌入式脚本语言。
Lua ：用于配置文件和基本应用程序脚本的小型快速脚本引擎。
luacxx：用于创建Lua绑定的C++ 11 API
SWIG ：一个可以让你的C++代码链接到JavaScript，Perl，PHP，Python，Tcl和Ruby的包装器/接口生成器
V7：嵌入式的JavaScript 引擎。
V8 ：谷歌的快速JavaScript引擎，可以被嵌入到任何C++应用程序中。

 


序列化


Cap’n Proto ：快速数据交换格式和RPC系统。
cereal ：C++11 序列化库
FlatBuffers ：内存高效的序列化库
MessagePack ：C/C++的高效二进制序列化库，例如 JSON
protobuf ：协议缓冲，谷歌的数据交换格式。
protobuf-c ：C语言的协议缓冲实现
SimpleBinaryEncoding：用于低延迟应用程序的对二进制格式的应用程序信息的编码和解码。
Thrift ：高效的跨语言IPC/RPC，用于C++，Java，Python，PHP，C#和其它多种语言中，最初由Twitter开发。

 


视频


libvpx ：VP8/VP9编码解码SDK
FFmpeg ：一个完整的，跨平台的解决方案，用于记录，转换视频和音频流。
libde265 ：开放的h.265视频编解码器的实现。
OpenH264：开源H.364 编解码器。
Theora ：免费开源的视频压缩格式。

 


虚拟机


CarpVM：C中有趣的VM，让我们一起来看看这个。
MicroPython ：旨在实现单片机上Python3.x的实现
TinyVM：用纯粹的ANSI C编写的小型，快速，轻量级的虚拟机。

 


Web应用框架


Civetweb ：提供易于使用，强大的，C/C++嵌入式Web服务器，带有可选的CGI，SSL和Lua支持。
CppCMS ：免费高性能的Web开发框架（不是 CMS）.
Crow ：一个C++微型web框架（灵感来自于Python Flask）
Kore :使用C语言开发的用于web应用程序的超快速和灵活的web服务器/框架。
libOnion：轻量级的库，帮助你使用C编程语言创建web服务器。
QDjango：使用C++编写的，基于Qt库的web框架，试图效仿Django API，因此得此名。
Wt ：开发Web应用的C++库。

 


XML

XML就是个垃圾，xml的解析很烦人，对于计算机它也是个灾难。这种糟糕的东西完全没有存在的理由了。-Linus Torvalds



Expat ：用C语言编写的xml解析库
Libxml2 ：Gnome的xml C解析器和工具包
libxml++ ：C++的xml解析器
PugiXML ：用于C++的，支持XPath的轻量级，简单快速的XML解析器。
RapidXml ：试图创建最快速的XML解析器，同时保持易用性，可移植性和合理的W3C兼容性。
TinyXML ：简单小型的C++XML解析器，可以很容易地集成到其它项目中。
TinyXML2：简单快速的C++CML解析器，可以很容易集成到其它项目中。
TinyXML++：TinyXML的一个全新的接口，使用了C++的许多许多优势，模板，异常和更好的异常处理。
Xerces-C++ ：用可移植的C++的子集编写的XML验证解析器。

 


多项混杂

一些有用的库或者工具，但是不适合上面的分类，或者还没有分类。



C++ Format ：C++的小型，安全和快速格式化库
casacore ：从aips++ 派生的一系列C++核心库
cxx-prettyprint：用于C++容器的打印库
DynaPDF ：易于使用的PDF生成库
gcc-poison ：帮助开发人员禁止应用程序中的不安全的C/C++函数的简单的头文件。
googlemock：编写和使用C++模拟类的库
HTTP Parser ：C的http请求/响应解析器
libcpuid ：用于x86 CPU检测盒特征提取的小型C库
libevil ：许可证管理器
libusb：允许移动访问USB设备的通用USB库
PCRE：正则表达式C库，灵感来自于Perl中正则表达式的功能。
Remote Call Framework ：C++的进程间通信框架。
Scintilla ：开源的代码编辑控件
Serial Communication Library ：C++语言编写的跨平台，串口库。
SDS：C的简单动态字符串库
SLDR ：超轻的DNS解析器
SLRE： 超轻的正则表达式库
Stage ：移动机器人模拟器
VarTypes：C++/Qt4功能丰富，面向对象的管理变量的框架。
ZBar：‘条形码扫描器’库，可以扫描照片，图片和视频流中的条形码，并返回结果。
CppVerbalExpressions ：易于使用的C++正则表达式
QtVerbalExpressions：基于C++ VerbalExpressions 库的Qt库
PHP-CPP：使用C++来构建PHP扩展的库
Better String ：C的另一个字符串库，功能更丰富，但是没有缓冲溢出问题，还包含了一个C++包装器。

 


软件

用于创建开发环境的软件


编译器

C/C++编译器列表



Clang :由苹果公司开发的
GCC：GNU编译器集合
Intel C++ Compiler ：由英特尔公司开发
LLVM ：模块化和可重用编译器和工具链技术的集合
Microsoft Visual C++ ：MSVC，由微软公司开发
Open WatCom ：Watcom，C，C++和Fortran交叉编译器和工具
TCC ：轻量级的C语言编译器

 


在线编译器

在线C/C++编译器列表



codepad ：在线编译器/解释器，一个简单的协作工具
CodeTwist：一个简单的在线编译器/解释器，你可以粘贴的C,C++或者Java代码，在线执行并查看结果
coliru ：在线编译器/shell， 支持各种C++编译器
Compiler Explorer：交互式编译器，可以进行汇编输出
CompileOnline：Linux上在线编译和执行C++程序
Ideone ：一个在线编译器和调试工具，允许你在线编译源代码并执行，支持60多种编程语言。

 


调试器

C/C++调试器列表



Comparison of debuggers ：来自维基百科的调试器列表
GDB ：GNU调试器
Valgrind：内存调试，内存泄露检测，性能分析工具。

 


集成开发环境（IDE）

C/C++集成开发环境列表



AppCode ：构建与JetBrains’ IntelliJ IDEA 平台上的用于Objective-C，C,C++，Java和Java开发的集成开发环境
CLion：来自JetBrains的跨平台的C/C++的集成开发环境
Code::Blocks ：免费C，C++和Fortran的集成开发环境
CodeLite ：另一个跨平台的免费的C/C++集成开发环境
Dev-C++：可移植的C/C++/C++11集成开发环境
Eclipse CDT：基于Eclipse平台的功能齐全的C和C++集成开发环境
Geany ：轻量级的快速，跨平台的集成开发环境。
IBM VisualAge ：来自IBM的家庭计算机集成开发环境。
Irony-mode：由libclang驱动的用于Emacs的C/C++微模式
KDevelop：免费开源集成开发环境
Microsoft Visual Studio ：来自微软的集成开发环境
NetBeans ：主要用于Java开发的的集成开发环境，也支持其他语言，尤其是PHP，C/C++和HTML5。
Qt Creator：跨平台的C++，Javascript和QML集成开发环境，也是Qt SDK的一部分。
rtags：C/C++的客户端服务器索引，用于 跟基于clang的emacs的集成
Xcode ：由苹果公司开发
YouCompleteMe：一个用于Vim的根据你敲的代码快速模糊搜索并进行代码补全的引擎。

 


构建系统


Bear ：用于为clang工具生成编译数据库的工具
Biicode：基于文件的简单依赖管理器。
CMake ：跨平台的免费开源软件用于管理软件使用独立编译的方法进行构建的过程。
CPM：基于CMake和Git的C++包管理器
FASTBuild：高性能，开源的构建系统，支持高度可扩展性的编译，缓冲和网络分布。
Ninja ：专注于速度的小型构建系统
Scons ：使用Python scipt 配置的软件构建工具
tundra ：高性能的代码构建系统，甚至对于非常大型的软件项目，也能提供最好的增量构建次数。
tup：基于文件的构建系统，用于后台监控变化的文件。

 


静态代码分析

提高质量，减少瑕疵的代码分析工具列表



Cppcheck ：静态C/C++代码分析工具
include-what-you-use ：使用clang进行代码分析的工具，可以#include在C和C++文件中。
OCLint ：用于C，C++和Objective-C的静态源代码分析工具，用于提高质量，减少瑕疵。
Clang Static Analyzer：查找C，C++和Objective-C程序bug的源代码分析工具
List of tools for static code analysis ：来自维基百科的静态代码分析工具列表
感谢平凡之路和fffaraz 的整理，转载请注明出处。

http://www.ezlippi.com/blog/2014/12/c-open-project.html