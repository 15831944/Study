C++ main函数中参数argc和argv含义及用法

argc 是 argument count的缩写，表示传入main函数的参数个数；

argv 是 argument vector的缩写，表示传入main函数的参数序列或指针，并且第一个参数argv[0]一定是程序的名称，并且包含了程序所在的完整路径，所以确切的说需要我们输入的main函数的参数个数应该是argc-1个；

简单用法示例，新建工程键代码：

#include <iostream>
 
using namespace std;
 
void main(int argc,char *argv[])
{
	for(int i=0;i<argc;i++)
	{
		cout<<"argument["<<i<<"] is: "<<argv[i]<<endl;
	}
	system("pause");
}


argv是指向指针的指针，main函数的第二个参数“char *argv[]“也可以替换为 “char **argv“，两者是等价的。

在编译环境下按F5运行，输出如下：
argument[0] is:D:\test\Main_argc\Debug\Main_argc.exe

可见，在没有参数传入的情况下，保存程序名称的第一个变量argv[0]依然存在。

传参数给main函数有两种方法，第一种方式是在编译环境中设置，以vs2012为例，右击项目—>属性—>配置属性—>调试—>命令参数，
在命令参数中输入:Make it beautiful !每个参数之间用空格隔开。

之后点击确定并应用，运行之后显示如下：
argument[0] is:D:\test\Main_argc\Debug\Main_argc.exe
argument[0] is:Make
argument[0] is:it
argument[0] is:beautiful
argument[0] is:!

第二种方式也是经常会用到的方式是通过命令提示符传入。首先需要打开命令提示符窗口，点击开始菜单在“搜索程序和文件”里输入命令“cmd”或者直接按快捷键 Windows+R，在弹出的对话框里输入“cmd”即可打开命令提示符窗口：
打开命令提示符窗口后需要输入生成的exe文件所在的完整路径，一个简便的方法是把exe文件直接拖入提示符窗口即可，之后输入传入参数，以空格分隔，之后回车，显示如下：
D:\test\Main_argc\Debug\Main_argc.exe Make it beautiful !
argument[0] is:Make
argument[0] is:it
argument[0] is:beautiful
argument[0] is:!

如果你坚持要手工输入完整路径的话，你会发现等你“Ctrl+C”路径后，在提示符窗口中按“Ctrl+V”却不能粘贴，这时候可以在窗口中右键单击一下试试，你会发现右键菜单里的粘贴功能还是有效的。

下一个例子演示使用opencv显示一幅图片：

#include <iostream>
#include <core/core.hpp>
#include <highgui/highgui.hpp>
using namespace std;
using namespace cv;
 
void main(int argc,char **argv)
{
	Mat image=imread(argv[1]);
	imshow("Lena",image);
	waitKey();
}


注意读入的参数是argv[1]，在命令提示符窗口运行：
>>D:\test\Main_argc\Debug\Main_argc.exe E:\Picture\lena.jpg
运行弹出对话框，里面显示图片

最后说明一下：一般编译器默认使用argc和argv两个名称作为main函数的参数，但这两个参数如此命名并不是必须的，你可以使用任何符合C++语言命名规范的变量名作为入参，效果是一样的：
#include <iostream>
#include <core/core.hpp>
#include <highgui/highgui.hpp>
using namespace std;
using namespace cv;
 
void main(int value,char **point)
{
	for(int i=0;i<value;i++)
	{
		cout<<"argument["<<i<<"] is: "<<point[i]<<endl;
	}
	system("pause");
}

